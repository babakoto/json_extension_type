/// Example simulating API responses and data fetching
library;

import 'dart:convert';

// Simulate API response models
enum PostStatus {
  draft,
  published,
  archived,
}

typedef Post = ({
  String id,
  String title,
  String content,
  String authorId,
  Author author,
  PostStatus status,
  List<String> tags,
  int likes,
  int comments,
  String createdAt,
  String? publishedAt,
});

typedef Author = ({
  String id,
  String name,
  String email,
  String? avatar,
  bool verified,
});

typedef ApiResponse = ({
  bool success,
  String message,
  int? count,
  List<Post>? data,
});

// ==========================================
// Generated by JSON Extension Type (JET)
// Do not modify manually
// Run "jet generate" to update
// ==========================================
extension type PostJson(dynamic data) {
  Post toModel() {
    return (
      id: data['id'] as String? ?? '',
      title: data['title'] as String? ?? '',
      content: data['content'] as String? ?? '',
      authorId: data['authorId'] as String? ?? '',
      author: AuthorJson(data['author'] as Map<String, Object?>?).toModel(),
      status: PostStatus.values.byName(data['status'] as String? ?? 'draft'),
      tags: (data['tags'] as List?)?.cast<String>() ?? [],
      likes: data['likes'] as int? ?? 0,
      comments: data['comments'] as int? ?? 0,
      createdAt: data['createdAt'] as String? ?? '',
      publishedAt: data['publishedAt'] as String?,
    );
  }

  List<Post> toList() {
    final data = this.data as List;
    return data.map((e) => PostJson(e).toModel()).toList();
  }
}

extension type AuthorJson(dynamic data) {
  Author toModel() {
    return (
      id: data['id'] as String? ?? '',
      name: data['name'] as String? ?? '',
      email: data['email'] as String? ?? '',
      avatar: data['avatar'] as String?,
      verified: data['verified'] as bool? ?? false,
    );
  }

  List<Author> toList() {
    final data = this.data as List;
    return data.map((e) => AuthorJson(e).toModel()).toList();
  }
}

extension type ApiResponseJson(dynamic data) {
  ApiResponse toModel() {
    return (
      success: data['success'] as bool? ?? false,
      message: data['message'] as String? ?? '',
      count: data['count'] as int?,
      data: data['data'] != null ? PostJson(data['data']).toList() : null,
    );
  }

  List<ApiResponse> toList() {
    final data = this.data as List;
    return data.map((e) => ApiResponseJson(e).toModel()).toList();
  }
}

// Simulated API service
class BlogApiService {
  /// Simulate fetching posts from an API
  Future<ApiResponse> fetchPosts() async {
    // Simulate network delay
    await Future.delayed(Duration(milliseconds: 500));

    final jsonString = '''
    {
      "success": true,
      "message": "Posts retrieved successfully",
      "count": 3,
      "data": [
        {
          "id": "post-1",
          "title": "Getting Started with Dart",
          "content": "Dart is an amazing language for building cross-platform applications...",
          "authorId": "auth-1",
          "author": {
            "id": "auth-1",
            "name": "Alice Johnson",
            "email": "alice@example.com",
            "avatar": "https://example.com/avatars/alice.jpg",
            "verified": true
          },
          "status": "published",
          "tags": ["dart", "programming", "tutorial"],
          "likes": 142,
          "comments": 23,
          "createdAt": "2024-10-20T10:00:00Z",
          "publishedAt": "2024-10-20T12:00:00Z"
        },
        {
          "id": "post-2",
          "title": "Advanced Flutter Patterns",
          "content": "Learn advanced patterns for building scalable Flutter apps...",
          "authorId": "auth-2",
          "author": {
            "id": "auth-2",
            "name": "Bob Smith",
            "email": "bob@example.com",
            "verified": true
          },
          "status": "published",
          "tags": ["flutter", "patterns", "architecture"],
          "likes": 98,
          "comments": 15,
          "createdAt": "2024-10-22T14:30:00Z",
          "publishedAt": "2024-10-22T15:00:00Z"
        },
        {
          "id": "post-3",
          "title": "JSON Parsing Made Easy",
          "content": "Discover how to simplify JSON parsing in Dart...",
          "authorId": "auth-1",
          "author": {
            "id": "auth-1",
            "name": "Alice Johnson",
            "email": "alice@example.com",
            "avatar": "https://example.com/avatars/alice.jpg",
            "verified": true
          },
          "status": "draft",
          "tags": ["dart", "json", "parsing"],
          "likes": 0,
          "comments": 0,
          "createdAt": "2024-10-25T09:00:00Z"
        }
      ]
    }
    ''';

    final jsonData = jsonDecode(jsonString);
    return ApiResponseJson(jsonData).toModel();
  }

  /// Simulate fetching a single post
  Future<Post> fetchPost(String id) async {
    await Future.delayed(Duration(milliseconds: 300));

    final jsonString = '''
    {
      "id": "$id",
      "title": "Understanding Extension Types",
      "content": "Extension types in Dart 3.0 provide a way to create zero-cost wrappers...",
      "authorId": "auth-3",
      "author": {
        "id": "auth-3",
        "name": "Charlie Brown",
        "email": "charlie@example.com",
        "verified": false
      },
      "status": "published",
      "tags": ["dart", "extension-types", "advanced"],
      "likes": 67,
      "comments": 8,
      "createdAt": "2024-10-23T16:00:00Z",
      "publishedAt": "2024-10-23T18:00:00Z"
    }
    ''';

    final jsonData = jsonDecode(jsonString);
    return PostJson(jsonData).toModel();
  }
}

void main() async {
  print('=== API Simulation Example ===\n');

  final apiService = BlogApiService();

  // Fetch all posts
  print('Fetching posts...');
  final response = await apiService.fetchPosts();

  if (response.success) {
    print('✓ ${response.message}');
    print('Total posts: ${response.count}\n');

    if (response.data != null) {
      for (final post in response.data!) {
        print('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━');
        print('📝 ${post.title}');
        print('   By: ${post.author.name}${post.author.verified ? ' ✓' : ''}');
        print('   Status: ${post.status}');
        print('   Tags: ${post.tags.join(', ')}');
        print('   👍 ${post.likes} likes  💬 ${post.comments} comments');
        if (post.publishedAt != null) {
          print('   Published: ${post.publishedAt}');
        } else {
          print('   Created: ${post.createdAt} (not published yet)');
        }
      }
      print('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n');

      // Statistics
      final publishedPosts = response.data!.where((p) => p.status == PostStatus.published);
      final totalLikes = response.data!.fold<int>(0, (sum, post) => sum + post.likes);
      final totalComments = response.data!.fold<int>(0, (sum, post) => sum + post.comments);
      final verifiedAuthors = response.data!.where((p) => p.author.verified).length;

      print('Statistics:');
      print('- Published posts: ${publishedPosts.length}/${response.data!.length}');
      print('- Total engagement: $totalLikes likes, $totalComments comments');
      print('- Posts by verified authors: $verifiedAuthors');
    }
  }

  print('\n─────────────────────────────────────\n');

  // Fetch single post
  print('Fetching specific post...');
  final singlePost = await apiService.fetchPost('post-42');
  print('✓ Post loaded\n');
  print('Title: ${singlePost.title}');
  print('Author: ${singlePost.author.name}');
  print('Content: ${singlePost.content.substring(0, 50)}...');
  print('Tags: ${singlePost.tags.join(', ')}');
}

